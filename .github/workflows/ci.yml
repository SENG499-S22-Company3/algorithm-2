name: Algorithm 2 CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: algorithm-2

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

        # Only build and push docker image if this action is triggered from the main branch.

      - name: Build Docker image
        if: ${{ github.ref == 'refs/heads/main' }}
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Trigger unit tests for Algorithm 2
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/checkout@v3
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python tests/test_endpoints.py

      - name: Log in to Github Package registry
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "${{ secrets.GITHUB_TOKEN}}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image to registry
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Trigger event to execute integration tests
        uses: peter-evans/repository-dispatch@v2
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: seng499-s22-company3/shared
          event-type: company3-algorithm-2
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "repo": "algorithm-2"}'
